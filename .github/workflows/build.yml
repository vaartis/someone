name: Build

on:
  push:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  test-linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install deps
      run: |
        sudo apt-get update && sudo apt-get install -y build-essential clang cmake xorg-dev libgl-dev\
             libudev-dev libopenal-dev libvorbis-dev libflac-dev libreadline-dev libncurses-dev xvfb

    - name: Build and run tests
      run: |
        mkdir $GITHUB_WORKSPACE/_build && cd $GITHUB_WORKSPACE/_build
        cmake .. -DCMAKE_BUILD_TYPE=Debug -DSOMEONE_TESTING=TRUE
        xvfb-run -a -s "-screen 0 1920x1080x24 +extension GLX +render" make -j $(nproc) test

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: /home/runner/work/someone/someone/_build/luacov.report.out

  build-linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install deps
      run: |
        sudo apt-get update && sudo apt-get install -y build-essential clang cmake xorg-dev libgl-dev\
             libudev-dev libopenal-dev libvorbis-dev libflac-dev libreadline-dev libncurses-dev

    - name: Build
      run: |
        mkdir $GITHUB_WORKSPACE/_build && cd $GITHUB_WORKSPACE/_build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j $(nproc)

    - name: Copy the release to /someone/someone-${{github.sha}}/
      run: |
        sudo mkdir -p /someone/someone-${{github.sha}}/
        cd $GITHUB_WORKSPACE/_build/
        sudo cp -r someone resources/ /someone/someone-${{github.sha}}/

    - name: Upload release to itch.io
      if: ${{ github.event_name == 'release' }}
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        CHANNEL: linux
        RELDIR: "/someone/"
      run: |
        curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
        unzip butler.zip && chmod +x butler
        ./butler push ${RELDIR} vaartis/someone:${CHANNEL} --userversion ${GITHUB_REF:10}


    - name: Delete old artifacts
      uses: c-hive/gha-remove-artifacts@v1.1.0
      with:
        age: 1 day
        skip-tags: true

    - name: Upload the release artifact
      uses: actions/upload-artifact@v2
      with:
        name: "someone-${{github.sha}}-linux"
        path: "/someone/"

  build-windows:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install MSYS2
      uses: eine/setup-msys2@v0
      with:
        update: true
        path-type: inherit

    - name: Install dependencies
      shell: msys2 {0}
      run: pacman -S --noconfirm mingw-w64-x86_64-{cmake,gcc} mingw-w64-i686-{cmake,gcc} make

    - name: Build x86_64
      shell: msys2 {0}
      run: |
        mkdir ${GITHUB_WORKSPACE}/_build && cd ${GITHUB_WORKSPACE}/_build
        cmake .. -DCMAKE_BUILD_TYPE=Release -G Unix\ Makefiles
        make -j $(nproc)

    - name: Copy the x86_64 release to /d/someone/someone-${{github.sha}}-x86_64/
      shell: msys2 {0}
      run: |
        cd ${GITHUB_WORKSPACE}/_build
        mkdir -p /d/someone-x86_64/someone-${{github.sha}}-x86_64/
        cp -r someone.exe resources\
              deps/lua/src/lua/src/lua53.dll /mingw64/bin/{libstdc++-6.dll,libgcc_s_seh-1.dll,libwinpthread-1.dll}\
              ../deps/sfml/extlibs/bin/x64/openal32.dll /d/someone-x86_64/someone-${{github.sha}}-x86_64

    - name: Download butler
      if: ${{ github.event_name == 'release' }}
      run: |
        curl -L -o butler.zip https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default
        unzip butler.zip && chmod +x butler.exe

    - name: Upload the x86_64 release to itch.io
      shell: msys2 {0}
      if: ${{ github.event_name == 'release' }}
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        CHANNEL: windows-x86_64
        RELDIR: "D:\\someone-x86_64"
      run: |
        ./butler push ${RELDIR} vaartis/someone:${CHANNEL} --userversion ${GITHUB_REF:10}

    - name: Upload the x86_64 release artifact
      uses: actions/upload-artifact@v2
      with:
        name: "someone-${{github.sha}}-windows-x86_64"
        path: "D:\\someone-x86_64"

    - name: Build i686
      env:
        MSYSTEM: MINGW32
      shell: msys2 {0}
      run: |
        rm -rf ${GITHUB_WORKSPACE}/_build
        mkdir ${GITHUB_WORKSPACE}/_build && cd ${GITHUB_WORKSPACE}/_build
        cmake .. -DCMAKE_BUILD_TYPE=Release -G Unix\ Makefiles
        make -j $(nproc)

    - name: Copy the i686 release to /d/someone/someone-${{github.sha}}-i686/
      shell: msys2 {0}
      run: |
        cd ${GITHUB_WORKSPACE}/_build
        mkdir -p /d/someone-i686/someone-${{github.sha}}-i686/
        cp -r someone.exe resources\
              deps/lua/src/lua/src/lua53.dll /mingw32/bin/{libstdc++-6.dll,libgcc_s_dw2-1.dll,libwinpthread-1.dll}\
              ../deps/sfml/extlibs/bin/x86/openal32.dll /d/someone-i686/someone-${{github.sha}}-i686

    - name: Upload the i686 release to itch.io
      shell: msys2 {0}
      if: ${{ github.event_name == 'release' }}
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        CHANNEL: windows-i686
        RELDIR: "D:\\someone-i686"
      run: |
        ./butler push ${RELDIR} vaartis/someone:${CHANNEL} --userversion ${GITHUB_REF:10}

    - name: Upload the i686 release artifact
      uses: actions/upload-artifact@v2
      with:
        name: "someone-${{github.sha}}-windows-i686"
        path: "D:\\someone-i686"

  build-macos:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Build
      run: |
        mkdir $GITHUB_WORKSPACE/_build && cd $GITHUB_WORKSPACE/_build
        cmake .. -DCMAKE_BUILD_TYPE=Release
        make -j $(nproc) install

    - name: Copy the release to /Users/runner/someone/someone-${{github.sha}}/
      run: |
        sudo mkdir -p /Users/runner/someone/someone-${{github.sha}}/
        cd $GITHUB_WORKSPACE/_build/
        sudo cp -r someone.app /Users/runner/someone/someone-${{github.sha}}/

    - name: Upload release to itch.io
      if: ${{ github.event_name == 'release' }}
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        CHANNEL: macos
        RELDIR: "/Users/runner/someone"
      run: |
        curl -L -o butler.zip https://broth.itch.ovh/butler/darwin-amd64/LATEST/archive/default
        unzip butler.zip && chmod +x butler
        ./butler push ${RELDIR} vaartis/someone:${CHANNEL} --userversion ${GITHUB_REF:10}

    - name: Upload the release artifact
      uses: actions/upload-artifact@v2
      with:
        name: "someone-${{github.sha}}-macos"
        path: "/Users/runner/someone"
